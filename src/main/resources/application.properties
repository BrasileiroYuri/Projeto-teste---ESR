 #spring.profiles.active=

#Autenticação com o banco de dados.
spring.datasource.url=jdbc:mysql://localhost/projetoteste?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=8755

# --> Schema generation do Hibernate:
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=create

#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/ddl.sql

# Em produção, usando um Spring Profiles próprio de produção, não teremos essa propriedade.
# Assim, não executaremos o callback afterMigrate. Por isso separamos em pastas.
spring.flyway.locations=classpath:DB/Migration,classpath:DB/TestData

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

#Padrão: 10, 10 e 10000.
#Máximo de conexões mantidas.
spring.datasource.hikari.maximum-pool-size=5

spring.jackson.deserialization.fail-on-unknown-properties=true
spring.jackson.deserialization.fail-on-ignored-properties=true

#Mínimo de conexões mantidas.
spring.datasource.hikari.minimum-idle=3
#Tempo mínimo que conexões ociosas serão mantidas.
spring.datasource.hikari.idle-timeout=10000

spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false